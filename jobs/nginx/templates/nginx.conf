worker_processes <%= p("router.number_of_cpus") == -1 ? "auto" : p("router.number_of_cpus") %>;

events {
  use epoll;
}

error_log /var/vcap/sys/log/nginx/error.log;

http {
  access_log /var/vcap/sys/log/nginx/access.log;

  include ext/upstreams.conf;

  server {
    listen <%= p("router.port") %> http2;
    server_tokens off;

    proxy_set_header  Host $host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $remote_addr;

    include ext/locations.conf;
  }

  <% if p("router.enable_ssl") %>
  server {
    listen 443 ssl http2;
    server_tokens off;

    proxy_set_header  Host $host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto https;

    ssl_certificate /var/vcap/jobs/nginx/config/cert;
    ssl_certificate_key /var/vcap/jobs/nginx/config/key;

    # some suggestions taken from https://cipherli.st/
    ssl_ciphers <%= p("router.cipher_suites") %>;
    ssl_ecdh_curve secp384r1;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    keepalive_timeout 70s;

    include ext/locations.conf;
  }
  <% end %>

  server {
    listen <%= p("router.status.port") %>;
    auth_basic "status";
    auth_basic_user_file /var/vcap/jobs/nginx/config/auth_basic;

    location /health {
      return 200 "ok";
    }
  }
}
